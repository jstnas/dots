## startup
exec wlsunset -l 51.3 -L 0.1
exec fnott
exec discord

## hide cursor
seat seat0 hide_cursor 3000

## font
font pango:JetBrains Mono 10

## colours
# grays
set $col0 #001020
set $col1 #304050
set $col2 #607080
set $col3 #90a0b0
# accent
set $col4 #704020
# indicator
set $col5 #207040
# urgent
set $col6 #702040

# class                 border background text  indicator child_border
client.focused          $col4  $col4      $col3 $col5     $col4
client.focused_inactive $col1  $col1      $col3 $col5     $col1
client.unfocused        $col1  $col1      $col2 $col5     $col1
client.urgent           $col6  $col6      $col3 $col5     $col6
client.placeholder      $col5  $col5      $col3 $col5     $col5

## gaps
gaps inner 8
smart_gaps on
smart_borders on
# disable titlebars
default_border pixel 2

## workspaces
set $ws1 workspace 0α
set $ws2 workspace 1β
set $ws3 workspace 2γ
set $ws4 workspace 3δ
set $ws5 workspace 4ε
set $ws6 workspace 5ζ
set $ws7 workspace 6η
set $ws8 workspace 7θ
set $ws9 workspace 8ι
set $ws10 workspace 9κ

## variables
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot fish
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu-wl_run | xargs swaymsg exec --

### Output configuration
# Example configuration:
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
# You can get the names of your outputs by running: swaymsg -t get_outputs
#output * bg $col0 solid_color
output * bg ~/pictures/wall.png fill $col0
output DP-1 mode 1920x1080@143.855Hz
output HDMI-A-1 resolution 1920x1080 position 0,0 transform 270

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
## thinkpad keyboard
input type:keyboard {
	xkb_options "caps:escape"
	repeat_delay 300
	repeat_rate 30
}

input 1:1:AT_Translated_Set_2_keyboard {
	xkb_layout "gb"
}

input type:pointer {
	natural_scroll disabled
}

input type:touchpad {
	tap enabled
	natural_scroll disabled
}

### Key bindings
## Basics:
# Start a terminal
bindsym $mod+Shift+Return exec $term
# Kill focused window
bindsym $mod+Shift+c kill
# Start your launcher
bindsym $mod+p exec $menu
# Screenshot
bindsym Print exec ~/.local/bin/scrot
bindsym Shift+Print exec ~/.local/bin/scrot r
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal
# Reload the configuration file
bindsym $mod+Shift+r reload
# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+q exec swaymsg exit
# close notification (fnott)
bindsym $mod+Backspace exec fnottctl dismiss

## media keys
# volume
bindsym XF86AudioMute exec ~/.local/bin/mute
bindsym XF86AudioRaiseVolume exec ~/.local/bin/vol +
bindsym XF86AudioLowerVolume exec ~/.local/bin/vol -
# backlight
bindsym XF86MonBrightnessUp exec ~/.local/bin/bl +
bindsym XF86MonBrightnessDown exec ~/.local/bin/bl -

## moving around
# move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# move the focused window with the same, but add shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

## workspaces
# move back and fourth
bindsym $mod+Tab workspace back_and_forth
# switch to workspace
bindsym $mod+1 $ws1
bindsym $mod+2 $ws2
bindsym $mod+3 $ws3
bindsym $mod+4 $ws4
bindsym $mod+5 $ws5
bindsym $mod+6 $ws6
bindsym $mod+7 $ws7
bindsym $mod+8 $ws8
bindsym $mod+9 $ws9
bindsym $mod+0 $ws10
# move focused container to workspace
bindsym $mod+Shift+1 move container to $ws1
bindsym $mod+Shift+2 move container to $ws2
bindsym $mod+Shift+3 move container to $ws3
bindsym $mod+Shift+4 move container to $ws4
bindsym $mod+Shift+5 move container to $ws5
bindsym $mod+Shift+6 move container to $ws6
bindsym $mod+Shift+7 move container to $ws7
bindsym $mod+Shift+8 move container to $ws8
bindsym $mod+Shift+9 move container to $ws9
bindsym $mod+Shift+0 move container to $ws10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

## Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv
# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# Make the current focus fullscreen
bindsym $mod+f fullscreen
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
# Move focus to the parent container
bindsym $mod+a focus parent

## Scratchpad:
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.
# Move the currently focused window to the scratchpad
#bindsym $mod+Shift+minus move scratchpad
# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show

### Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### status bar
bar {
	strip_workspace_numbers yes
    position top
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%a %b %Z %H:%M:%S %d/%m/%y'; do sleep 1; done
    colors {
        statusline $col2
        background $col0
        #class             border  backgr  text
        focused_workspace  $col4 $col4 $col3
        active_workspace   $col1 $col1 $col3
        inactive_workspace $col0 $col0 $col2
        urgent_workspace   $col6 $col6 $col3
    }
}

# assignments
assign [app_id=firefox] $ws3
assign [app_id=librewolf] $ws3
for_window [class=discord] move container to $ws4
for_window [class=Steam] move container to $ws5

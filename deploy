#!/bin/sh

# if config dir is unset, use the default one
if [ -z "$XDG_CONFIG_HOME" ]; then
	printf "config path is unset, using default!\n"
	export XDG_CONFIG_HOME="$HOME/.config"
fi

dot() {
	# usage: dot "from" "to"
	# setup colours
	tc='\e['
	rst="${tc}0m"
	lnk="${tc}33m" # link colour
	sym="${tc}36m" # symlinked colour
	occ="${tc}31m" # occupied colour
	cre="${tc}32m" # created colour
	# skip if dot deployed
	if [ -h $2 ]; then
		printf "${sym}%s$rst" "symlinked "
	# skip if dot occupied
	elif [ -e $2 ]; then
		printf "${occ}%s$rst" "occupied  "
	# otherwise create it
	else
		dir="$(dirname $2)"
		mkdir -p $dir
		ln -sT $1 $2
		printf "${cre}%s$rst" "created   "
	fi
	printf " $lnk%s$rst -> $lnk%s$rst\n" $1 $2
}

# Create symlinks
# base
dot "$PWD/fish"			"$XDG_CONFIG_HOME/fish"
dot "$PWD/gitconfig"	"$XDG_CONFIG_HOME/git/config"
dot "$PWD/nvim"			"$XDG_CONFIG_HOME/nvim"
dot "$PWD/profile"		"$HOME/.profile"
dot "$PWD/profiles"		"$XDG_CONFIG_HOME/profiles"
dot "$PWD/sfeedrc"		"$XDG_CONFIG_HOME/sfeedrc"
dot "$PWD/ssh"			"$HOME/.ssh"
dot "$PWD/msmtprc"		"$XDG_CONFIG_HOME/msmtp/config"
# arch
dot "$PWD/paru.conf"	"$XDG_CONFIG_HOME/paru/paru.conf"
# wayland
dot "$PWD/fnott.ini"	"$XDG_CONFIG_HOME/fnott/fnott.ini"
dot "$PWD/foot.ini"		"$XDG_CONFIG_HOME/foot/foot.ini"
dot "$PWD/i3blocks"		"$XDG_CONFIG_HOME/i3blocks/config"
dot "$PWD/kanshi"		"$XDG_CONFIG_HOME/kanshi"
dot "$PWD/mako"			"$XDG_CONFIG_HOME/mako/config"
dot "$PWD/mpv"			"$XDG_CONFIG_HOME/mpv"
dot "$PWD/ncmpcpp"		"$XDG_CONFIG_HOME/ncmpcpp"
dot "$PWD/sway"			"$XDG_CONFIG_HOME/sway/config"
dot "$PWD/zathura"		"$XDG_CONFIG_HOME/zathura"
# misc
dot "$PWD/bin"			"$HOME/.local/bin"
dot "$PWD/lynx"			"$XDG_CONFIG_HOME/lynx"
#dot "$PWD/mpd.conf"		"$XDG_CONFIG_HOME/mpd/mpd.conf"
